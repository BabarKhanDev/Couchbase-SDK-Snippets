{
    "Create Collection": {
        "prefix": ["@cbcrcol"],
        "body": ["ICouchbaseCollectionManager collectionMgr = ${1:bucket}.Collections;","","var spec = new CollectionSpec(\"${2:scope-name}\", \"${3:collection-name}\");","","try {","    await collectionMgr.CreateCollectionAsync(spec);","}","catch (CollectionExistsException) {","    Console.WriteLine(\"Collection already exists\");","}","catch (ScopeNotFoundException) {","    Console.WriteLine(\"The specified parent scope doesn't exist\");","}"],
        "description": "Create a new collection, this requires a collection manager to aleady be present. You can make one with the snippet: @cbmkcollectionmanager"
    },
    "Create Scope": {
        "prefix": ["@cbcrscope"],
        "body": ["try {","    await collectionMgr.CreateScopeAsync(\"${1:scope-name}\");","}","catch (ScopeExistsException) {","    Console.WriteLine(\"The scope already exists\");","}"],
        "description": "Create a new scope, this requires a collection manager to aleady be present. You can make one with the snippet: @cbmkcollectionmanager"
    },
    "Create Bucket": {
        "prefix": ["@cbcrbuck"],
        "body": ["IBucketManager bucketMgr = ${1:cluster}.Buckets;","","var bucketSettings = new BucketSettings();","bucketSettings.Name = \"${2:bucket-name}\";","bucketSettings.BucketType = ${3:BucketType.Couchbase};","bucketSettings.RamQuotaMB = ${4:100};","await bucketMgr.CreateBucketAsync(bucketSettings);"],
        "description": "Create a new bucket, this requires a bucket manager to be present, you can create one with @cbmkbucketmanager"
    },
    "Create Index": {
        "prefix": ["@cbcrind"],
        "body": ["not sure the best way to make this yet"],
        "description": "Create a new query index manager object and an index."
    },
    "Create Collection Manager": {
        "prefix": ["@cbcolman"],
        "body": ["ICouchbaseCollectionManager collectionMgr = ${1:bucket}.Collections;"],
        "description": "Create a collection manager on your bucket object."
    },
    "Create Bucket Manager": {
        "prefix": ["@cbbuckman"],
        "body": ["IBucketManager bucketMgr = ${1:cluster}.Buckets;"],
        "description": "Create a bucket manager on your cluster object."
    },
    "Connect to a Cluster": {
        "prefix": ["@cbclus"],
        "body": ["var ${1:cluster} = await Cluster.ConnectAsync(\"${2:connectionString}\", \"${3:username}\", \"${4:password}\");"],
        "description": "Connect to a cluster and create a new Cluster object"
    },
    "Connect to a Bucket": {
        "prefix": ["@cbbuck"],
        "body": ["var ${1:bucket} = await ${2:cluster}.BucketAsync(\"${3:bucketName}\");"],
        "description": "Get a bucket reference, and create a new Bucket object, using a cluster object that you can create using @cbcnncluster"
    },
    "Connect to a Scope": {
        "prefix": ["@cbscope"],
        "body": ["var ${1:scope} = await ${2:bucket}.ScopeAsync(\"${3:scopeName}\");"],
        "description": "Get a scope reference, and create a new Scope object, using a bucket object that you can create using @cbcnnbucket"
    },
    "Connect to a Collection": {
        "prefix": ["@cbcol"],
        "body": ["var ${1:collection} = await ${2:scope}.CollectionAsync(\"${3:collectionName}\");"],
        "description": "Get a collection reference, and create a new Collection object, using a scope object that you can create using @cbcnnscope"
    }
}