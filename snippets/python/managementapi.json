{
    "Create Collection": {
        "prefix": ["@cbmkcollection"],
        "body": ["collection_spec = CollectionSpec(","    \"${1:collection_name}\",","    scope_name=\"${2:scope_name}\")","","try:","    collection = coll_manager.create_collection(collection_spec)","except CollectionAlreadyExistsException as ex:","    print(ex)"],
        "description": "Create a new collection, this requires a collection manager to aleady be present. You can make one with the snippet: @cbmkcollectionmanager."
    },
    "Create Scope": {
        "prefix": ["@cbmkscope"],
        "body": ["try:","    coll_manager.create_scope(\"${1:scope_name}\")","except ScopeAlreadyExistsException as ex:","    print(ex)"],
        "description": "Create a new scope, this requires a collection manager to aleady be present. You can make one with the snippet: @cbmkcollectionmanager."
    },
    "Create Bucket": {
        "prefix": ["@cbmkbucket"],
        "body": ["${1:bucket_manager}.create_bucket(","    CreateBucketSettings(","        name=\"${2:bucket_name}\",","        flush_enabled=${3:False},","        ram_quota_mb=${4:100},","        num_replicas=\"${5:0}\",","        bucket_type=${6:BucketType.COUCHBASE},","        conflict_resolution_type=${7:ConflictResolutionType.SEQUENCE_NUMBER}))"],
        "description": "Create a new bucket, this requires a bucket manager to be present. You can make one with the snippet @cbmkbucketmanager."
    },
    "Create Index": {
        "prefix": ["@cbmkindex"],
        "body": ["query_manager = ${1:cluster}.QueryIndexManager()", "query_manager.createIndex(\"${1:bucketName}\", \"${2:indexName}\", ${3:fields})"],
        "description": "Create a new query index manager object and an index."
    },
    "Create Collection Manager": {
        "prefix": ["@cbmkcollectionmanager"],
        "body": ["coll_manager = ${1:bucket}.collections()"],
        "description": "Create a CollectionManager object on your bucket object."
    },
    "Create Bucket Manager": {
        "prefix": ["@cbmkbucketmanager"],
        "body": ["bucket_manager = ${1:cluster}.buckets()"],
        "description": "Create a bucket manager on your cluster object."
    }
}
