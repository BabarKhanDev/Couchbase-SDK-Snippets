{
    "Create Collection": {
        "prefix": ["@cbcrcol"],
        "body": ["coll_manager = ${1:bucket}.collections()","","collection_spec = CollectionSpec(","    \"${2:collection_name}\",","    scope_name=\"${3:scope_name}\")","","try:","    collection = coll_manager.create_collection(collection_spec)","except CollectionAlreadyExistsException as ex:","    print(ex)"],
        "description": "Create a new collection, this requires a collection manager to aleady be present. You can make one with the snippet: @cbmkcollectionmanager."
    },
    "Create Scope": {
        "prefix": ["@cbcrscope"],
        "body": ["try:","    coll_manager.create_scope(\"${1:scope_name}\")","except ScopeAlreadyExistsException as ex:","    print(ex)"],
        "description": "Create a new scope, this requires a collection manager to aleady be present. You can make one with the snippet: @cbmkcollectionmanager."
    },
    "Create Bucket": {
        "prefix": ["@cbcrbuck"],
        "body": ["bucket_manager = ${1:cluster}.buckets()","","${2:bucket_manager}.create_bucket(","    CreateBucketSettings(","        name=\"${3:bucket_name}\",","        flush_enabled=${4:False},","        ram_quota_mb=${5:100},","        num_replicas=\"${6:0}\",","        bucket_type=${7:BucketType.COUCHBASE},","        conflict_resolution_type=${8:ConflictResolutionType.SEQUENCE_NUMBER}))"],
        "description": "Create a new bucket, this requires a bucket manager to be present. You can make one with the snippet @cbmkbucketmanager."
    },
    "Create Index": {
        "prefix": ["@cbcrind"],
        "body": ["query_manager = ${1:cluster}.QueryIndexManager()", "query_manager.createIndex(\"${1:bucketName}\", \"${2:indexName}\", ${3:fields})"],
        "description": "Create a new query index manager object and an index."
    },
    "Create Collection Manager": {
        "prefix": ["@cbcolman"],
        "body": ["coll_manager = ${1:bucket}.collections()"],
        "description": "Create a CollectionManager object on your bucket object."
    },
    "Create Bucket Manager": {
        "prefix": ["@cbbuckman"],
        "body": ["bucket_manager = ${1:cluster}.buckets()"],
        "description": "Create a bucket manager on your cluster object."
    },
    "Connect to a Cluster": {
        "prefix": ["@cbclus"],
        "body": ["${1:cluster} = Cluster('${2:connection_string}', ClusterOptions(","  PasswordAuthenticator('${3:username}', '${4:password}')))"],
        "description": "Connect to a cluster and create a new Cluster object"
    },
    "Connect to a Bucket": {
        "prefix": ["@cbbuck"],
        "body": ["${1:bucket} = ${2:cluster}.bucket('${3:bucket_name}')"],
        "description": "Get a bucket reference, and create a new Bucket object, using a cluster object that you can create using @cbcnncluster"
    },
    "Connect to a Scope": {
        "prefix": ["@cbscope"],
        "body": ["${1:scope} = ${2:bucket}.scope(\"${3:scope_name}\")"],
        "description": "Get a scope reference, and create a new Scope object, using a bucket object that you can create using @cbcnnbucket"
    },
    "Connect to a Collection": {
        "prefix": ["@cbcol"],
        "body": ["${1:collection} = ${2:scope}.collection(\"${3:collection_name}\")"],
        "description": "Get a collection reference, and create a new Collection object, using a scope object that you can create using @cbcnnscope"
    }
}